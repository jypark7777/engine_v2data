# Generated by Django 3.2.3 on 2021-05-21 07:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('type', models.IntegerField(choices=[(0, 'image'), (1, 'video')], default=0)),
                ('note_id', models.CharField(blank=True, max_length=40, null=True)),
                ('likes', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='좋아요 갯수')),
                ('collects', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='북마크 갯수')),
                ('shareCount', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='공유 갯수')),
                ('comments', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='댓글 갯수')),
                ('time', models.DateTimeField(blank=True, null=True, verbose_name='작성 시간')),
            ],
            options={
                'verbose_name': '노트',
                'verbose_name_plural': '노트 정보',
            },
        ),
        migrations.CreateModel(
            name='CrawlNoteCommentsBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('comments_id', models.CharField(max_length=200, verbose_name='댓글 ID')),
                ('content', models.TextField(verbose_name='내용')),
                ('likes', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='좋아요 갯수')),
                ('time', models.DateTimeField(blank=True, null=True, verbose_name='작성 시간')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XiaCrawlNoteCategoriesBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='카테고리 이름')),
                ('categoriesIndex', models.IntegerField(verbose_name='카테고리 인덱스')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XiaCrawlProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('is_profile_crawled', models.BooleanField(default=False, verbose_name='샤오홍슈 프로필 크롤링 유무')),
                ('is_analy_requirements', models.BooleanField(default=False, verbose_name='샤오홍슈 프로필 분석 기본 조건 충족')),
                ('is_analy_complete', models.BooleanField(default=False, verbose_name='유저 분석 유무')),
                ('is_report_complete', models.BooleanField(default=False, verbose_name='리포트 생성 유무')),
                ('user_id', models.CharField(max_length=200, verbose_name='샤오홍슈 유저 아이디')),
                ('nickname', models.CharField(max_length=200, verbose_name='샤오홍슈 유저 닉네임')),
                ('desc', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='위치')),
                ('gender', models.IntegerField(choices=[(0, '남성'), (1, '여성'), (2, '알수없음')], default=2)),
                ('fans', models.IntegerField(default=0, verbose_name='팔로워 수')),
                ('follows', models.IntegerField(default=0, verbose_name='팔로잉 수')),
                ('notes', models.IntegerField(default=0, verbose_name='노트 수')),
                ('boards', models.IntegerField(default=0, verbose_name='앨범 갯수')),
                ('liked', models.IntegerField(default=0, verbose_name='좋아요 수')),
                ('collected', models.IntegerField(default=0, verbose_name='북마크 수')),
                ('officialVerified', models.BooleanField(default=False, verbose_name='오피셜 인증 유무')),
                ('redOfficialVerifyType', models.IntegerField(default=0)),
                ('redOfficialVerifyShowIcon', models.BooleanField(default=False)),
                ('redOfficialVerifyIconType', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XiaCrawlRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_source', models.IntegerField(blank=True, choices=[(0, 'Featuring Lambda'), (1, 'Featuring Request'), (2, 'Other API')], default=0)),
                ('crawl_type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='인스타 크롤링 시간')),
            ],
        ),
        migrations.CreateModel(
            name='CrawlNoteSubComments',
            fields=[
                ('crawlnotecommentsbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='xiaohongshu_crawler.crawlnotecommentsbase')),
                ('targetCommentId', models.CharField(blank=True, max_length=200, null=True, verbose_name='대상 댓글')),
            ],
            options={
                'verbose_name': '노트 대댓글',
                'verbose_name_plural': '노트 대댓글 정보',
            },
            bases=('xiaohongshu_crawler.crawlnotecommentsbase',),
        ),
        migrations.CreateModel(
            name='XiaCrawlNoteMainCategories',
            fields=[
                ('xiacrawlnotecategoriesbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='xiaohongshu_crawler.xiacrawlnotecategoriesbase')),
                ('korea', models.CharField(max_length=100, null=True, verbose_name='메인 카테고리 한글')),
            ],
            options={
                'verbose_name': '노트 메인 카테고리',
                'verbose_name_plural': '노트 메인 카테고리 정보',
            },
            bases=('xiaohongshu_crawler.xiacrawlnotecategoriesbase',),
        ),
        migrations.CreateModel(
            name='XiaCrawlProfileRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('followingProfile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='following_profile', to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='팔로잉 유저')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlprofilerelation', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
                ('targetProfile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_follower_profile', to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='팔로워 받은 대상')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XiaCrawlProfileLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('name', models.CharField(max_length=100, verbose_name='레벨 이름')),
                ('image', models.URLField(max_length=500, verbose_name='레벨 이미지')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlprofilelevel', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XiaCrawlProfileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('bannerImage', models.URLField(blank=True, max_length=500, null=True, verbose_name='샤오홍슈 배너 이미지')),
                ('image', models.URLField(blank=True, max_length=500, null=True, verbose_name='샤오홍슈 프로필 이미지')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlprofileimage', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='xiacrawlprofile',
            name='image',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofileimage'),
        ),
        migrations.AddField(
            model_name='xiacrawlprofile',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofilelevel', verbose_name='유저 레벨'),
        ),
        migrations.AddField(
            model_name='xiacrawlprofile',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlprofile', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.CreateModel(
            name='XiaCrawlNoteKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('keyword_name', models.CharField(max_length=100, verbose_name='키워드 이름')),
                ('keyword_id', models.CharField(max_length=50, verbose_name='키워드 아이디')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlnotekeyword', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '노트 키워드',
                'verbose_name_plural': '노트 키워드 정보',
            },
        ),
        migrations.AddField(
            model_name='xiacrawlnotecategoriesbase',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlnotecategoriesbase', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.CreateModel(
            name='XiaCrawlBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('board_id', models.CharField(max_length=200, verbose_name='앨범 ID')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='공개여부')),
                ('desc', models.TextField(null=True)),
                ('name', models.CharField(max_length=100, verbose_name='앨범 이름')),
                ('noteCount', models.IntegerField(default=0, verbose_name='앨범 포스트 수')),
                ('fanCount', models.IntegerField(default=0, verbose_name='앨범 구독자 수')),
                ('notes', models.ManyToManyField(to='xiaohongshu_crawler.CrawlNote')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlboard', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='앨범 제작자 이름')),
            ],
            options={
                'verbose_name': '앨범',
                'verbose_name_plural': '앨범 정보',
            },
        ),
        migrations.CreateModel(
            name='CrawlNoteRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnoterelated', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
                ('relatedNote', models.ManyToManyField(related_name='note', to='xiaohongshu_crawler.CrawlNote', verbose_name='연관 노트')),
                ('targetNote', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.crawlnote', verbose_name='대상 노트')),
            ],
            options={
                'verbose_name': '연관 노트',
                'verbose_name_plural': '연관 노트 정보',
            },
        ),
        migrations.CreateModel(
            name='CrawlNoteKeywordRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnotekeywordrelated', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
                ('relatedKeyword', models.ManyToManyField(related_name='note_keyword_related', to='xiaohongshu_crawler.XiaCrawlNoteKeyword', verbose_name='연관 키워드')),
                ('targetKeyword', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlnotekeyword', verbose_name='대상 키워드')),
            ],
            options={
                'verbose_name': '노트 연관 키워드',
                'verbose_name_plural': '노트 연관 키워드 정보',
            },
        ),
        migrations.CreateModel(
            name='CrawlNoteImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('cover', models.IntegerField(choices=[(0, 'cover'), (1, 'sub')], default=0, verbose_name='이미지 타입')),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='미디어 URL')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='가로길이')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='세로길이')),
                ('fileId', models.CharField(max_length=200, verbose_name='파일ID')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnoteimage', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '노트 미디어',
                'verbose_name_plural': '노트 미디어 정보',
            },
        ),
        migrations.AddField(
            model_name='crawlnotecommentsbase',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnotecommentsbase', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.AddField(
            model_name='crawlnotecommentsbase',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='댓글 작성자'),
        ),
        migrations.CreateModel(
            name='CrawlNoteCaption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('title', models.CharField(max_length=300)),
                ('desc', models.TextField(null=True)),
                ('note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.crawlnote', verbose_name='크롤링된 노트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnotecaption', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '노트 글내용',
                'verbose_name_plural': '노트 글내용 정보',
            },
        ),
        migrations.AddField(
            model_name='crawlnote',
            name='keywords',
            field=models.ManyToManyField(related_name='crawlnote', to='xiaohongshu_crawler.XiaCrawlNoteKeyword', verbose_name='키워드 정보'),
        ),
        migrations.AddField(
            model_name='crawlnote',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnote', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.AddField(
            model_name='crawlnote',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='크롤링된 프로필'),
        ),
        migrations.CreateModel(
            name='CrawlCarouselMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('detail_image', models.ManyToManyField(related_name='note_image', to='xiaohongshu_crawler.CrawlNoteImage', verbose_name='미디어')),
                ('note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.crawlnote', verbose_name='크롤링된 캐러셀')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlcarouselmedia', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '노트 캐러셀',
                'verbose_name_plural': '노트 캐러셀 정보',
            },
        ),
        migrations.CreateModel(
            name='CrawlUserProfileProxy',
            fields=[
            ],
            options={
                'verbose_name': '샤오홍슈 인플루언서 프로필',
                'verbose_name_plural': '샤오홍슈 인플루언서 프로필 정보',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('xiaohongshu_crawler.xiacrawlprofile',),
        ),
        migrations.CreateModel(
            name='XiaCrawlNoteSubCategories',
            fields=[
                ('xiacrawlnotecategoriesbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='xiaohongshu_crawler.xiacrawlnotecategoriesbase')),
                ('mainCategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlnotemaincategories', verbose_name='대분류')),
            ],
            options={
                'verbose_name': '노트 서브 카테고리',
                'verbose_name_plural': '노트 서브 카테고리 정보',
            },
            bases=('xiaohongshu_crawler.xiacrawlnotecategoriesbase',),
        ),
        migrations.CreateModel(
            name='XiaCrawlBoardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('board_id', models.CharField(max_length=200, verbose_name='앨범 ID')),
                ('is_enabled', models.BooleanField(default=False, verbose_name='공개여부')),
                ('desc', models.TextField(null=True)),
                ('name', models.CharField(max_length=100, verbose_name='앨범 이름')),
                ('noteCount', models.IntegerField(default=0, verbose_name='앨범 포스트 수')),
                ('fanCount', models.IntegerField(default=0, verbose_name='앨범 구독자 수')),
                ('notes', models.ManyToManyField(to='xiaohongshu_crawler.CrawlNote')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xiacrawlboardsnapshot', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='앨범 제작자 이름')),
            ],
            options={
                'unique_together': {('board_id', 'snap_date')},
            },
        ),
        migrations.CreateModel(
            name='CrawlUserProfileSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('is_profile_crawled', models.BooleanField(default=False, verbose_name='샤오홍슈 프로필 크롤링 유무')),
                ('is_analy_requirements', models.BooleanField(default=False, verbose_name='샤오홍슈 프로필 분석 기본 조건 충족')),
                ('is_analy_complete', models.BooleanField(default=False, verbose_name='유저 분석 유무')),
                ('is_report_complete', models.BooleanField(default=False, verbose_name='리포트 생성 유무')),
                ('user_id', models.CharField(max_length=200, verbose_name='샤오홍슈 유저 아이디')),
                ('nickname', models.CharField(max_length=200, verbose_name='샤오홍슈 유저 닉네임')),
                ('desc', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='위치')),
                ('gender', models.IntegerField(choices=[(0, '남성'), (1, '여성'), (2, '알수없음')], default=2)),
                ('fans', models.IntegerField(default=0, verbose_name='팔로워 수')),
                ('follows', models.IntegerField(default=0, verbose_name='팔로잉 수')),
                ('notes', models.IntegerField(default=0, verbose_name='노트 수')),
                ('boards', models.IntegerField(default=0, verbose_name='앨범 갯수')),
                ('liked', models.IntegerField(default=0, verbose_name='좋아요 수')),
                ('collected', models.IntegerField(default=0, verbose_name='북마크 수')),
                ('officialVerified', models.BooleanField(default=False, verbose_name='오피셜 인증 유무')),
                ('redOfficialVerifyType', models.IntegerField(default=0)),
                ('redOfficialVerifyShowIcon', models.BooleanField(default=False)),
                ('redOfficialVerifyIconType', models.IntegerField(default=0)),
                ('image', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofileimage')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofilelevel', verbose_name='유저 레벨')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawluserprofilesnapshot', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'unique_together': {('user_id', 'snap_date')},
            },
        ),
        migrations.CreateModel(
            name='CrawlNoteComments',
            fields=[
                ('crawlnotecommentsbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='xiaohongshu_crawler.crawlnotecommentsbase')),
                ('subCommentsTotal', models.IntegerField(default=0, verbose_name='대댓글 갯수')),
                ('subComments', models.ManyToManyField(related_name='note_sub_comments', to='xiaohongshu_crawler.CrawlNoteSubComments', verbose_name='대댓글')),
                ('targetNoteId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.crawlnote', verbose_name='대상 노트')),
            ],
            options={
                'verbose_name': '노트 댓글',
                'verbose_name_plural': '노트 댓글 정보',
            },
            bases=('xiaohongshu_crawler.crawlnotecommentsbase',),
        ),
        migrations.AddField(
            model_name='crawlnote',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlnotesubcategories', verbose_name='카테고리 정보'),
        ),
        migrations.CreateModel(
            name='CrawlNoteSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('type', models.IntegerField(choices=[(0, 'image'), (1, 'video')], default=0)),
                ('note_id', models.CharField(blank=True, max_length=40, null=True)),
                ('likes', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='좋아요 갯수')),
                ('collects', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='북마크 갯수')),
                ('shareCount', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='공유 갯수')),
                ('comments', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='댓글 갯수')),
                ('time', models.DateTimeField(blank=True, null=True, verbose_name='작성 시간')),
                ('keywords', models.ManyToManyField(related_name='crawlnotesnapshot', to='xiaohongshu_crawler.XiaCrawlNoteKeyword', verbose_name='키워드 정보')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlnotesnapshot', to='xiaohongshu_crawler.xiacrawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlprofile', verbose_name='크롤링된 프로필')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='xiaohongshu_crawler.xiacrawlnotesubcategories', verbose_name='카테고리 정보')),
            ],
            options={
                'unique_together': {('note_id', 'snap_date')},
            },
        ),
    ]
