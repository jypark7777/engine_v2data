# Generated by Django 3.2.3 on 2021-05-21 07:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlCarouselMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('carousel_parent_id', models.CharField(blank=True, max_length=50, null=True)),
                ('media_type', models.IntegerField(blank=True, null=True)),
                ('original_width', models.IntegerField(blank=True, null=True)),
                ('original_height', models.IntegerField(blank=True, null=True)),
                ('video_codec', models.CharField(blank=True, max_length=50, null=True)),
                ('is_dash_eligible', models.IntegerField(blank=True, null=True)),
                ('video_duration', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('number_of_qualities', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlLocationFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('media_count', models.BigIntegerField(blank=True, null=True, verbose_name='미디어 갯수')),
                ('is_tag_crawled', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 크롤링 유무')),
                ('is_analy_requirements', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 분석 기본 조건 충족')),
                ('is_analy_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='분석 유무')),
                ('is_report_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='리포트 생성 유무')),
                ('profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 프로필 이미지')),
                ('slug', models.CharField(blank=True, max_length=255, null=True)),
                ('blurb', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': '위치 피드 검색 결과',
                'verbose_name_plural': '위치 피드 검색 결과',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('can_viewer_save', models.BooleanField(blank=True, default=False, null=True)),
                ('can_see_insights_as_brand', models.BooleanField(blank=True, default=False, null=True)),
                ('organic_tracking_token', models.CharField(blank=True, max_length=500, null=True)),
                ('can_viewer_reshare', models.BooleanField(blank=True, default=False, null=True)),
                ('max_num_visible_preview_comments', models.IntegerField(blank=True, null=True)),
                ('filter_type', models.IntegerField(blank=True, null=True, verbose_name='유저 아이디')),
                ('client_cache_key', models.CharField(blank=True, max_length=100, null=True)),
                ('comment_likes_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('media_type', models.IntegerField(blank=True, null=True)),
                ('carousel_media_count', models.BigIntegerField(blank=True, null=True)),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=40, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('photo_of_you', models.BooleanField(blank=True, default=False, null=True)),
                ('comment_threading_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('like_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('comment_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('direct_reply_to_author_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('has_liked', models.BooleanField(blank=True, default=False, null=True)),
                ('caption_is_edited', models.BooleanField(blank=True, default=False, null=True)),
                ('has_more_comments', models.BooleanField(blank=True, default=False, null=True)),
                ('inline_composer_display_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('can_view_more_preview_comments', models.BooleanField(blank=True, default=False, null=True)),
                ('taken_at', models.DateTimeField(blank=True, null=True, verbose_name='포스팅 시간')),
                ('accessibility_caption', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_video', models.BooleanField(blank=True, default=False, null=True)),
                ('video_view_count', models.BigIntegerField(blank=True, null=True)),
                ('typename', models.CharField(blank=True, max_length=100, null=True)),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
            ],
            options={
                'verbose_name': '크롤링 된 포스트',
                'verbose_name_plural': '크롤링 된 포스트',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_source', models.IntegerField(blank=True, choices=[(0, 'Request'), (4, 'Lambda Tag'), (1, 'External Post API'), (2, 'Lambda'), (3, 'lambda Profile'), (5, 'Lambda Request')], default=0)),
                ('crawl_type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='인스타 크롤링 시간')),
            ],
        ),
        migrations.CreateModel(
            name='CrawlRelatedTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlrelatedtag', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlSearchTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('media_count', models.BigIntegerField(blank=True, null=True, verbose_name='미디어 갯수')),
                ('profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 프로필 이미지')),
                ('formatted_media_count', models.CharField(blank=True, max_length=100, null=True)),
                ('use_default_avatar', models.BooleanField(blank=True, default=False, null=True)),
                ('allow_following', models.BooleanField(blank=True, default=False, null=True)),
                ('is_following', models.BooleanField(blank=True, default=False, null=True)),
                ('is_top_media_only', models.BooleanField(blank=True, default=False, null=True)),
                ('search_result_subtitle', models.CharField(blank=True, max_length=100, null=True)),
                ('is_tag_crawled', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 크롤링 유무')),
                ('is_analy_requirements', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 분석 기본 조건 충족')),
                ('is_analy_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='분석 유무')),
                ('is_report_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='리포트 생성 유무')),
                ('from_search_tag', models.ManyToManyField(blank=True, related_name='search_tags', to='instagram_crawler.CrawlSearchTag', verbose_name='검색한 키워드 해시태그')),
            ],
            options={
                'verbose_name': '해시태그 검색 결과',
                'verbose_name_plural': '해시태그 검색 결과',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('is_profile_crawled', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 프로필 크롤링 유무')),
                ('is_analy_requirements', models.BooleanField(blank=True, db_index=True, default=False, null=True, verbose_name='인스타 프로필 분석 기본 조건 충족')),
                ('is_analy_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='유저 분석 유무')),
                ('is_report_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='리포트 생성 유무')),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
                ('username', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='인스타 유저 네임')),
                ('full_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='인스타 풀 네임')),
                ('biography', models.TextField(blank=True, null=True)),
                ('profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 프로필 이미지')),
                ('hd_profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 HD 프로필 이미지')),
                ('is_private', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 비공개 유무')),
                ('is_verified', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 인증 유무')),
                ('public_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('public_email', models.EmailField(blank=True, max_length=200, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('is_business', models.BooleanField(blank=True, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('follower_count', models.IntegerField(blank=True, null=True)),
                ('has_chaining', models.BooleanField(blank=True, default=False, null=True)),
                ('should_show_public_contacts', models.BooleanField(blank=True, default=False, null=True)),
                ('public_phone_country_code', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_location_id', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('has_anonymous_profile_picture', models.BooleanField(blank=True, default=False, null=True)),
                ('external_url', models.URLField(blank=True, max_length=500, null=True)),
                ('direct_messaging', models.URLField(blank=True, max_length=100, null=True)),
                ('is_favorite', models.BooleanField(blank=True, default=False, null=True)),
                ('total_igtv_videos', models.IntegerField(blank=True, null=True)),
                ('mutual_followers_count', models.IntegerField(blank=True, null=True)),
                ('business_contact_method', models.CharField(blank=True, max_length=100, null=True)),
                ('geo_media_count', models.IntegerField(blank=True, null=True)),
                ('fb_page_call_to_action_id', models.CharField(blank=True, max_length=100, null=True)),
                ('can_hide_public_contacts', models.BooleanField(blank=True, default=False, null=True)),
                ('city_id', models.BigIntegerField(blank=True, null=True)),
                ('city_name', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=100, null=True)),
                ('address_street', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('usertags_count', models.IntegerField(blank=True, null=True)),
                ('is_potential_business', models.BooleanField(blank=True, null=True)),
                ('auto_expand_chaining', models.BooleanField(blank=True, null=True)),
                ('can_be_reported_as_fraud', models.BooleanField(blank=True, null=True)),
                ('is_interest_account', models.BooleanField(blank=True, null=True)),
                ('has_highlight_reels', models.BooleanField(blank=True, null=True)),
                ('following_tag_count', models.IntegerField(blank=True, null=True)),
                ('is_transfile', models.BooleanField(blank=True, default=False, null=True)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawluserprofile', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '크롤링된 프로필',
                'verbose_name_plural': '크롤링된 프로필',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlUserFollower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawluserfollower', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follower', to='instagram_crawler.crawluserprofile', verbose_name='대상자 (팔로잉 받은사람)')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='following', to='instagram_crawler.crawluserprofile', verbose_name='팔로워 (팔로잉 한사람)')),
            ],
            options={
                'verbose_name': '크롤링된 프로필 팔로워',
                'verbose_name_plural': '크롤링된 프로필 팔로워',
                'unique_together': {('target_user', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CrawlSearchTagSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('media_count', models.BigIntegerField(blank=True, null=True, verbose_name='미디어 갯수')),
                ('profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 프로필 이미지')),
                ('formatted_media_count', models.CharField(blank=True, max_length=100, null=True)),
                ('use_default_avatar', models.BooleanField(blank=True, default=False, null=True)),
                ('allow_following', models.BooleanField(blank=True, default=False, null=True)),
                ('is_following', models.BooleanField(blank=True, default=False, null=True)),
                ('is_top_media_only', models.BooleanField(blank=True, default=False, null=True)),
                ('search_result_subtitle', models.CharField(blank=True, max_length=100, null=True)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlsearchtagsnapshot', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '해시태그 검색 결과',
                'verbose_name_plural': '해시태그 검색 결과',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlSearchTagRelatedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_top', models.BooleanField(default=False, null=True, verbose_name='인스타 포스팅 탑 유무')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_tags', to='instagram_crawler.crawlpost')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlsearchtagrelatedpost', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('searchtag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_posts', to='instagram_crawler.crawlsearchtag')),
            ],
        ),
        migrations.AddField(
            model_name='crawlsearchtag',
            name='posts',
            field=models.ManyToManyField(blank=True, related_name='searchtags', through='instagram_crawler.CrawlSearchTagRelatedPost', to='instagram_crawler.CrawlPost', verbose_name='크롤링된 연관 포스팅'),
        ),
        migrations.AddField(
            model_name='crawlsearchtag',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlsearchtag', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.AddField(
            model_name='crawlsearchtag',
            name='related_tag',
            field=models.ManyToManyField(blank=True, to='instagram_crawler.CrawlRelatedTag', verbose_name='연관 해시태그'),
        ),
        migrations.CreateModel(
            name='CrawlProfileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 프로필 이미지')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlprofileimage', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPostVideoVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_id', models.BigIntegerField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 영상')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('carousel_media', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video', to='instagram_crawler.crawlcarouselmedia', verbose_name='크롤링된 포스트 미디어')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video', to='instagram_crawler.crawlpost', verbose_name='크롤링된 포스트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostvideoversion', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPostUserTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('position_x', models.FloatField(blank=True, null=True)),
                ('position_y', models.FloatField(blank=True, null=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostusertags', to='instagram_crawler.crawlpost', verbose_name='크롤링된 포스트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostusertags', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostusertags', to='instagram_crawler.crawluserprofile', verbose_name='태그된 유저')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPostSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('can_viewer_save', models.BooleanField(blank=True, default=False, null=True)),
                ('can_see_insights_as_brand', models.BooleanField(blank=True, default=False, null=True)),
                ('organic_tracking_token', models.CharField(blank=True, max_length=500, null=True)),
                ('can_viewer_reshare', models.BooleanField(blank=True, default=False, null=True)),
                ('max_num_visible_preview_comments', models.IntegerField(blank=True, null=True)),
                ('filter_type', models.IntegerField(blank=True, null=True, verbose_name='유저 아이디')),
                ('client_cache_key', models.CharField(blank=True, max_length=100, null=True)),
                ('comment_likes_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('media_type', models.IntegerField(blank=True, null=True)),
                ('carousel_media_count', models.BigIntegerField(blank=True, null=True)),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True)),
                ('code', models.CharField(blank=True, max_length=40, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('photo_of_you', models.BooleanField(blank=True, default=False, null=True)),
                ('comment_threading_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('like_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('comment_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('direct_reply_to_author_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('has_liked', models.BooleanField(blank=True, default=False, null=True)),
                ('caption_is_edited', models.BooleanField(blank=True, default=False, null=True)),
                ('has_more_comments', models.BooleanField(blank=True, default=False, null=True)),
                ('inline_composer_display_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('can_view_more_preview_comments', models.BooleanField(blank=True, default=False, null=True)),
                ('taken_at', models.DateTimeField(blank=True, null=True, verbose_name='포스팅 시간')),
                ('accessibility_caption', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_video', models.BooleanField(blank=True, default=False, null=True)),
                ('video_view_count', models.BigIntegerField(blank=True, null=True)),
                ('typename', models.CharField(blank=True, max_length=100, null=True)),
                ('insta_pk', models.BigIntegerField(blank=True, db_index=True, null=True, verbose_name='인스타 PK')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostsnapshot', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostsnapshot', to='instagram_crawler.crawluserprofile', verbose_name='크롤링된 프로필')),
            ],
            options={
                'verbose_name': '크롤링 된 포스트',
                'verbose_name_plural': '크롤링 된 포스트',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPostLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
                ('external_source', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_places_id', models.BigIntegerField(blank=True, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('post', models.ManyToManyField(blank=True, related_name='crawlpostlocation', to='instagram_crawler.CrawlPost', verbose_name='연관 포스팅')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostlocation', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPostLiker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='liker', to='instagram_crawler.crawlpost', verbose_name='크롤링된 대상 포스트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostliker', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='liker', to='instagram_crawler.crawluserprofile', verbose_name='크롤링된 유저')),
            ],
            options={
                'verbose_name': '크롤링된 포스트 Liker',
                'verbose_name_plural': '크롤링된 포스트 Liker',
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CrawlPostImageVersion2Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 이미지')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('carousel_media', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image', to='instagram_crawler.crawlcarouselmedia', verbose_name='크롤링된 포스트 미디어')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image', to='instagram_crawler.crawlpost', verbose_name='크롤링된 포스트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostimageversion2candidate', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CrawlPostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
                ('has_liked_comment', models.BooleanField(blank=True, default=False, null=True, verbose_name='댓글 좋아요')),
                ('text', models.TextField(blank=True, null=True, verbose_name='댓글 내용')),
                ('inline_composer_display_condition', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('content_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at_utc', models.BigIntegerField(blank=True, null=True)),
                ('share_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('comment_like_count', models.BigIntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('bit_flags', models.IntegerField(blank=True, null=True)),
                ('did_report_as_spam', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='댓글 시간')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostcomment', to='instagram_crawler.crawlpost', verbose_name='크롤링된 포스트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostcomment', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostcomment', to='instagram_crawler.crawluserprofile', verbose_name='크롤링된 유저')),
            ],
            options={
                'verbose_name': '크롤링된 포스트 댓글',
                'verbose_name_plural': '크롤링된 포스트 댓글',
            },
        ),
        migrations.CreateModel(
            name='CrawlPostCaption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
                ('bit_flags', models.IntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('did_report_as_spam', models.BooleanField(blank=True, null=True)),
                ('media_id', models.BigIntegerField(blank=True, null=True)),
                ('created_at_utc', models.BigIntegerField(blank=True, null=True)),
                ('share_enabled', models.BooleanField(blank=True, default=False, null=True)),
                ('content_type', models.CharField(blank=True, max_length=20, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True, verbose_name='포스팅 시간')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostcaption', to='instagram_crawler.crawlpost', verbose_name='크롤링된 포스트')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpostcaption', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '크롤링된 포스트 글내용',
                'verbose_name_plural': '크롤링된 포스트 글내용',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='crawlpost',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpost', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.AddField(
            model_name='crawlpost',
            name='sidecar_parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sidecar_children', to='instagram_crawler.crawlpost'),
        ),
        migrations.AddField(
            model_name='crawlpost',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlpost', to='instagram_crawler.crawluserprofile', verbose_name='크롤링된 프로필'),
        ),
        migrations.CreateModel(
            name='CrawlLocationRelatedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_top', models.BooleanField(default=False, null=True, verbose_name='인스타 포스팅 탑 유무')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_posts', to='instagram_crawler.crawllocationfeed')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_location', to='instagram_crawler.crawlpost')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawllocationrelatedpost', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
        ),
        migrations.CreateModel(
            name='CrawlLocationFeedSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('insta_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('media_count', models.BigIntegerField(blank=True, null=True, verbose_name='미디어 갯수')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawllocationfeedsnapshot', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'verbose_name': '위치 피드 검색 결과',
                'verbose_name_plural': '위치 피드 검색 결과',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='crawllocationfeed',
            name='location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='instagram_crawler.crawlpostlocation'),
        ),
        migrations.AddField(
            model_name='crawllocationfeed',
            name='posts',
            field=models.ManyToManyField(blank=True, related_name='locationfeed', through='instagram_crawler.CrawlLocationRelatedPost', to='instagram_crawler.CrawlPost', verbose_name='크롤링된 연관 포스팅'),
        ),
        migrations.AddField(
            model_name='crawllocationfeed',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawllocationfeed', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.AddField(
            model_name='crawllocationfeed',
            name='searchtags',
            field=models.ManyToManyField(blank=True, to='instagram_crawler.CrawlSearchTag', verbose_name='연관 해시태그'),
        ),
        migrations.AddField(
            model_name='crawlcarouselmedia',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='media', to='instagram_crawler.crawlpost', verbose_name='크롤링된 포스트'),
        ),
        migrations.AddField(
            model_name='crawlcarouselmedia',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlcarouselmedia', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드'),
        ),
        migrations.CreateModel(
            name='CrawlPostLikerProxy',
            fields=[
            ],
            options={
                'verbose_name': '수집 반응 오디언스 프로필',
                'verbose_name_plural': '수집 반응 오디언스 프로필',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('instagram_crawler.crawlpostliker',),
        ),
        migrations.CreateModel(
            name='CrawlSearchTagProxy',
            fields=[
            ],
            options={
                'verbose_name': '해시태그 검색기',
                'verbose_name_plural': '해시태그 검색기',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('instagram_crawler.crawlsearchtag',),
        ),
        migrations.CreateModel(
            name='CrawlUserFollowerProxy',
            fields=[
            ],
            options={
                'verbose_name': '수집 구독 오디언스 프로필',
                'verbose_name_plural': '수집 구독 오디언스 프로필',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('instagram_crawler.crawluserfollower',),
        ),
        migrations.CreateModel(
            name='CrawlUserProfileProxy',
            fields=[
            ],
            options={
                'verbose_name': '수집 인플루언서 프로필',
                'verbose_name_plural': '수집 인플루언서 프로필',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('instagram_crawler.crawluserprofile',),
        ),
        migrations.CreateModel(
            name='CrawlUserSimilar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawlusersimilar', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='similars', to='instagram_crawler.crawluserprofile', verbose_name='대상자')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='similar', to='instagram_crawler.crawluserprofile', verbose_name='비슷한 계정들')),
            ],
            options={
                'verbose_name': '크롤링된 비슷한 계정들',
                'verbose_name_plural': '크롤링된 비슷한 계정들',
                'unique_together': {('target_user', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CrawlUserProfileSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='생성 시간')),
                ('updated_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='수정 시간')),
                ('snap_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 시간')),
                ('snap_date', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='스냅 생성 날짜')),
                ('is_profile_crawled', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 프로필 크롤링 유무')),
                ('is_analy_requirements', models.BooleanField(blank=True, db_index=True, default=False, null=True, verbose_name='인스타 프로필 분석 기본 조건 충족')),
                ('is_analy_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='유저 분석 유무')),
                ('is_report_complete', models.BooleanField(blank=True, default=False, null=True, verbose_name='리포트 생성 유무')),
                ('insta_pk', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='인스타 PK')),
                ('username', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='인스타 유저 네임')),
                ('full_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='인스타 풀 네임')),
                ('biography', models.TextField(blank=True, null=True)),
                ('profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 프로필 이미지')),
                ('hd_profile_pic_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='인스타 HD 프로필 이미지')),
                ('is_private', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 비공개 유무')),
                ('is_verified', models.BooleanField(blank=True, default=False, null=True, verbose_name='인스타 인증 유무')),
                ('public_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('public_email', models.EmailField(blank=True, max_length=200, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('is_business', models.BooleanField(blank=True, null=True)),
                ('media_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('follower_count', models.IntegerField(blank=True, null=True)),
                ('has_chaining', models.BooleanField(blank=True, default=False, null=True)),
                ('should_show_public_contacts', models.BooleanField(blank=True, default=False, null=True)),
                ('public_phone_country_code', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_location_id', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('has_anonymous_profile_picture', models.BooleanField(blank=True, default=False, null=True)),
                ('external_url', models.URLField(blank=True, max_length=500, null=True)),
                ('direct_messaging', models.URLField(blank=True, max_length=100, null=True)),
                ('is_favorite', models.BooleanField(blank=True, default=False, null=True)),
                ('total_igtv_videos', models.IntegerField(blank=True, null=True)),
                ('mutual_followers_count', models.IntegerField(blank=True, null=True)),
                ('business_contact_method', models.CharField(blank=True, max_length=100, null=True)),
                ('geo_media_count', models.IntegerField(blank=True, null=True)),
                ('fb_page_call_to_action_id', models.CharField(blank=True, max_length=100, null=True)),
                ('can_hide_public_contacts', models.BooleanField(blank=True, default=False, null=True)),
                ('city_id', models.BigIntegerField(blank=True, null=True)),
                ('city_name', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=100, null=True)),
                ('address_street', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('usertags_count', models.IntegerField(blank=True, null=True)),
                ('is_potential_business', models.BooleanField(blank=True, null=True)),
                ('auto_expand_chaining', models.BooleanField(blank=True, null=True)),
                ('can_be_reported_as_fraud', models.BooleanField(blank=True, null=True)),
                ('is_interest_account', models.BooleanField(blank=True, null=True)),
                ('has_highlight_reels', models.BooleanField(blank=True, null=True)),
                ('following_tag_count', models.IntegerField(blank=True, null=True)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crawluserprofilesnapshot', to='instagram_crawler.crawlrecord', verbose_name='크롤링 레코드')),
            ],
            options={
                'unique_together': {('insta_pk', 'snap_date')},
            },
        ),
    ]
